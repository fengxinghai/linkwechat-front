
#user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    sendfile on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout 65;
    client_max_body_size 20M;
    client_body_buffer_size 20M;

    #gzip  on;
    #优先静态压缩，使用现成的扩展名为 .gz 的预压缩文件
    gzip_static on;
    gzip_proxied expired no-cache no-store private auth;
    #
    #是否启动gzip动态压缩,on代表启动,off代表开启
    gzip on;
    #需要压缩的常见静态资源
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    #如果文件大于1k就启动压缩
    gzip_min_length 10k;

    #以16k为单位,按照原始数据的大小以4倍的方式申请内存空间,一般此项不要修改
    gzip_buffers 4 16k;

    #压缩的等级,数字选择范围是1-9,数字越小压缩的速度越快,消耗cpu就越大
    gzip_comp_level 3;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 443 ssl;
        #填写绑定证书的域名
        server_name demo.linkwechat.net;
        #证书文件名称
        ssl_certificate demo.linkwechat.net_bundle.crt;
        #私钥文件名称
        ssl_certificate_key demo.linkwechat.net.key;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        location /fileUpload {
            alias /usr/local/app/file/; #图片的映射路径，当前路径可自行定义
            autoindex on; #开启自动索引
            expires 1h; #过期时间
        }

        location ^~/linkwechat-api/ {
            proxy_buffer_size 1024k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
            proxy_buffers 16 1024k; #proxy_buffers缓冲区，网页平均在32k以下的设置
            proxy_busy_buffers_size 2048k; #高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 2048k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
            proxy_pass http://localhost:6180/;
        }


        location ^~/ws/ {
            proxy_pass http://localhost:6094/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location ~* \.(txt)$ {
            root /usr/local/nginx/txt;
            allow all;
        }

        # pc管理端
        location / {
            root /usr/local/nginx/html/prod/pc;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            proxy_read_timeout 150;

            # 处理跨域
            add_header Access-Control-Allow-Origin '*' always;
            # add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Allow-Methods '*';
            # add_header Access-Control-Allow-Credentials 'true';
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # vue2移动端
        location /mobile {
            alias /usr/local/nginx/html/prod/h5;
            try_files $uri $uri/ /mobile/index.html;
            index index.html;
        }

        # vue3移动端
        location /m {
            alias /usr/local/nginx/html/prod/m;
            try_files $uri $uri/ /m/index.html;
            index index.html;
        }

        error_page 404 401 403 500 502 503 504 https://$host/404;
    }

    #短链
    server {
        listen 80;
        server_name sl.linkwechat.net;

        location ^~/st/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #			proxy_pass http://localhost:6180/open/t/;
            proxy_pass http://localhost:6180/open/;

        }

    }

    server {
        listen 80;
        server_name demo.linkwechat.net linkwechat.net; #// 你的域名
        rewrite ^(.*)$ https://$host:443$1 permanent; #// 把http的域名请求转成https且转发到443端口
        # return 301 https://$host$request_uri; # 重定向到HTTPS
    }
}
